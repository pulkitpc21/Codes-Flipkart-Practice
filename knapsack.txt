#include<bits/stdc++.h>
using namespace std;
int dp[1002][1002];
int knapSack(int val[],int wt[],int w,int n){
    if(n==0 || w==0)
    return 0;
    if(dp[n][w]!=-1)
    return dp[n][w];
    if(wt[n-1]<=w)
    return dp[n][w]=max(val[n-1]+knapSack(val,wt,w-wt[n-1],n-1),knapSack(val,wt,w,n-1));
    else
    return dp[n][w]=knapSack(val,wt,w,n-1);
}
int main(){
    int t;
    cin>>t;
    while(t--){
        memset(dp,-1,sizeof(dp));
        int n;
        cin>>n;
        int w;
        cin>>w;
        int val[n];
        for(int i=0;i<n;i++)
        cin>>val[i];
        int wt[n];
        for(int i=0;i<n;i++)
        cin>>wt[i];
        cout<<knapSack(val,wt,w,n)<<endl;
    }
    return 0;
}